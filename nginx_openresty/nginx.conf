include tmp/nginx.user.conf;
worker_processes 1;
daemon off;
error_log stderr info;
error_log logs/error.log info;

events {
  worker_connections 1024;
}
http {
  include vendor/openresty/nginx/conf/mime.types;
  lua_package_path "root/vendor/lua-resty-redis/lib/?.lua;spec/?.lua;;";
  access_log /dev/stdout;
  access_log logs/access.log;
  
  server {
    listen 80;
    root root;
    lua_code_cache off;
    charset UTF-8;
    
    location / {
      content_by_lua_file 'root/lua/hello.lua';
    }
    location /redis {
      content_by_lua_file 'root/lua/redis.lua';
    }
    
    location /conditional_internal_redirect {
      content_by_lua_file 'root/lua/conditional_internal_redirect.lua';
    }
    location @internal_path {
      content_by_lua 'ngx.say("@internal_path: " .. ngx.var.request_uri)';
    }
    
    location /template {
      content_by_lua_file 'root/lua/template.lua';
    }
    
    location /upload {
      content_by_lua_file 'root/lua/upload.lua';
    }
    location /upload/files {
      if ($request_method = POST) {
        content_by_lua '
          os.remove(ngx.var.request_filename)
          ngx.redirect("/upload")
        ';
      }
      root upload;
      rewrite /upload/files/(.*) /$1 break;
    }
    
    location /set_by_lua {
      set_by_lua $lua_set "return 'Hello, OpenResty!!'";
      echo $lua_set;
    }
    
    location /busted {
      content_by_lua_file 'root/spec/runner.lua';
    }
  }
}
